name: "Master Build, Test & Deploy"

on:
  workflow_dispatch:
  push:
    branches:
      - master

# Keep perms minimal globally
permissions:
  contents: read

# Auto-cancel older runs on rapid pushes to master
concurrency:
  group: master-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  main:
    runs-on: ubuntu-latest
    # Override perms for this job so the gh-pages deploy can push commits
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      # Install Chrome BEFORE npm ci so the chromedriver npm pkg can auto-match
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install
        env:
          DETECT_CHROMEDRIVER_VERSION: true
        run: |
          npm ci --prefer-offline --no-audit --fund=false
          npm run setheapsize

      - name: Lint
        run: npx grunt lint

      - name: Unit Tests
        run: |
          npm test
          npm run testnodeconsumer

      - name: Production Build
        if: success()
        run: >
          npx grunt prod
          --msg="Version 10 is here! Read about the new features
          <a href='https://github.com/gchq/CyberChef/wiki/Character-encoding,-EOL-separators,-and-editor-features'>here</a>"

      - name: Generate sitemap
        run: npx grunt exec:sitemap

      # Use true headless Chrome; no Xvfb needed
      - name: UI Tests (headless)
        if: success()
        env:
          CHROME_ARGS: "--headless=new --no-sandbox --disable-dev-shm-usage"
        run: npx grunt testui

      # Optional: dump versions if UI tests fail for faster triage
      - name: Debug browser versions on failure
        if: failure()
        run: |
          google-chrome --version || true
          ./node_modules/.bin/chromedriver --version || chromedriver --version || true

      - name: Prepare for GitHub Pages
        if: success()
        run: npx grunt copy:ghPages

      - name: Deploy to GitHub Pages
        if: success() && github.ref == 'refs/heads/master'
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: ./build/prod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
